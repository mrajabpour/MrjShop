@model MRJ.ViewModels.AddProductViewModel
<div class="clearfix">
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-6">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ProductStatus, new { @class = "col-md-2 control-label" })
        <div class="col-md-6">
            @Html.EditorFor(m => m.ProductStatus)
        </div>
    </div>
    @if (Model.Prices.Count == 0)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Price, new { @class = "col-md-2 control-label" })
            <div class="col-md-2">
                <div class="input-group">
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control text-center", style = "direction:ltr;" })
                    <div class="input-group-addon">تومان</div>
                </div>
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(m => m.Categories, new { @class = "col-md-2 control-label" })
        <div class="col-md-5">
            @Html.ListBoxFor(m => m.Categories, ViewData["CategoriesSelectList"] as MultiSelectList, new { @class = "form-control js-example-responsive", style = "width: 100%;" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-9">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        </div>
    </div>
</div>
